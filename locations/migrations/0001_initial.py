# Generated by Django 4.2 on 2023-05-04 07:22

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
        ("items", "0006_remove_item_snapshot_insert_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("game_id", models.IntegerField(db_index=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("explore", "Exploring"), ("fishing", "Fishing")],
                        db_index=True,
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("image", models.CharField(max_length=255)),
                ("base_drop_rate", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="LocationItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sometimes", models.BooleanField(default=False)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_items",
                        to="items.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_items",
                        to="locations.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LocationItemEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("sometimes", models.BooleanField(default=False)),
                (
                    "item",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="locations.location",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="locations.locationitem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LocationEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("game_id", models.IntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[("explore", "Exploring"), ("fishing", "Fishing")],
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("image", models.CharField(max_length=255)),
                ("base_drop_rate", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="locations.location",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="location",
            constraint=models.UniqueConstraint(
                fields=("game_id", "type"), name="game_id_type"
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="location",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "locations_locationevent" ("base_drop_rate", "created_at", "game_id", "id", "image", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."base_drop_rate", NEW."created_at", NEW."game_id", NEW."id", NEW."image", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;',
                    hash="5315af89876ffa9172e302424917315d03e7df65",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_16203",
                    table="locations_location",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="location",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."game_id" IS DISTINCT FROM (NEW."game_id") OR OLD."type" IS DISTINCT FROM (NEW."type") OR OLD."name" IS DISTINCT FROM (NEW."name") OR OLD."image" IS DISTINCT FROM (NEW."image") OR OLD."base_drop_rate" IS DISTINCT FROM (NEW."base_drop_rate") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "locations_locationevent" ("base_drop_rate", "created_at", "game_id", "id", "image", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."base_drop_rate", NEW."created_at", NEW."game_id", NEW."id", NEW."image", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;',
                    hash="bee56de29fe7e8cd5a23aad6b94ef75e710c19f4",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_d2a04",
                    table="locations_location",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="locationitem",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "locations_locationitemevent" ("id", "item_id", "location_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "sometimes") VALUES (NEW."id", NEW."item_id", NEW."location_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."sometimes"); RETURN NULL;',
                    hash="eb40d09188f5c26fee317d1c05ddc99ae47fdd91",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_36876",
                    table="locations_locationitem",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="locationitem",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "locations_locationitemevent" ("id", "item_id", "location_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "sometimes") VALUES (NEW."id", NEW."item_id", NEW."location_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."sometimes"); RETURN NULL;',
                    hash="2fee04051a84075c40b38cffc0fc339386ef6e8f",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_235f1",
                    table="locations_locationitem",
                    when="AFTER",
                ),
            ),
        ),
    ]
