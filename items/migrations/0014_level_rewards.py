# Generated by Django 4.2 on 2023-05-27 00:12

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
        ("items", "0013_cooking_level"),
    ]

    operations = [
        migrations.CreateModel(
            name="SkillLevelReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "skill",
                    models.CharField(
                        choices=[
                            ("farming", "Farming"),
                            ("fishing", "Fishing"),
                            ("crafting", "Crafting"),
                            ("exploring", "Exploring"),
                            ("cooking", "Cooking"),
                        ],
                        max_length=32,
                    ),
                ),
                ("level", models.IntegerField()),
                ("order", models.IntegerField()),
                ("silver", models.BigIntegerField(blank=True, null=True)),
                ("gold", models.IntegerField(blank=True, null=True)),
                ("item_quantity", models.IntegerField(blank=True, null=True)),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skill_level_rewards",
                        to="items.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SkillLevelRewardEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "skill",
                    models.CharField(
                        choices=[
                            ("farming", "Farming"),
                            ("fishing", "Fishing"),
                            ("crafting", "Crafting"),
                            ("exploring", "Exploring"),
                            ("cooking", "Cooking"),
                        ],
                        max_length=32,
                    ),
                ),
                ("level", models.IntegerField()),
                ("order", models.IntegerField()),
                ("silver", models.BigIntegerField(blank=True, null=True)),
                ("gold", models.IntegerField(blank=True, null=True)),
                ("item_quantity", models.IntegerField(blank=True, null=True)),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="items.skilllevelreward",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="skilllevelreward",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "items_skilllevelrewardevent" ("gold", "id", "item_id", "item_quantity", "level", "order", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "silver", "skill") VALUES (NEW."gold", NEW."id", NEW."item_id", NEW."item_quantity", NEW."level", NEW."order", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."silver", NEW."skill"); RETURN NULL;',
                    hash="e2621806b149e19a619c7efb3d7f953b17b75e61",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_0a19f",
                    table="items_skilllevelreward",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="skilllevelreward",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "items_skilllevelrewardevent" ("gold", "id", "item_id", "item_quantity", "level", "order", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "silver", "skill") VALUES (NEW."gold", NEW."id", NEW."item_id", NEW."item_quantity", NEW."level", NEW."order", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."silver", NEW."skill"); RETURN NULL;',
                    hash="ed5de4fda883ef5a4b845a07abce24b116ab419b",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_818dc",
                    table="items_skilllevelreward",
                    when="AFTER",
                ),
            ),
        ),
    ]
