# Generated by Django 4.2 on 2023-05-02 05:15

from django.db import migrations, models
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("items", "0004_alter_item_description_alter_itemevent_description"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="item",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="item",
            name="snapshot_update",
        ),
        migrations.AddField(
            model_name="item",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="item",
            name="modified_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="item",
            name="reg_weight",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="item",
            name="runecube_weight",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="itemevent",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="itemevent",
            name="modified_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="itemevent",
            name="reg_weight",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="itemevent",
            name="runecube_weight",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="item",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "items_itemevent" ("base_yield_minutes", "buy_price", "can_buy", "can_craft", "can_mail", "can_master", "can_sell", "crafting_level", "created_at", "description", "id", "image", "min_mailable_level", "modified_at", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reg_weight", "runecube_weight", "sell_price", "type", "xp") VALUES (NEW."base_yield_minutes", NEW."buy_price", NEW."can_buy", NEW."can_craft", NEW."can_mail", NEW."can_master", NEW."can_sell", NEW."crafting_level", NEW."created_at", NEW."description", NEW."id", NEW."image", NEW."min_mailable_level", NEW."modified_at", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."reg_weight", NEW."runecube_weight", NEW."sell_price", NEW."type", NEW."xp"); RETURN NULL;',
                    hash="4131bd3a0242fc6b03c5df01f819469c81f29a1e",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_9fd5a",
                    table="items_item",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="item",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "items_itemevent" ("base_yield_minutes", "buy_price", "can_buy", "can_craft", "can_mail", "can_master", "can_sell", "crafting_level", "created_at", "description", "id", "image", "min_mailable_level", "modified_at", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reg_weight", "runecube_weight", "sell_price", "type", "xp") VALUES (NEW."base_yield_minutes", NEW."buy_price", NEW."can_buy", NEW."can_craft", NEW."can_mail", NEW."can_master", NEW."can_sell", NEW."crafting_level", NEW."created_at", NEW."description", NEW."id", NEW."image", NEW."min_mailable_level", NEW."modified_at", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."reg_weight", NEW."runecube_weight", NEW."sell_price", NEW."type", NEW."xp"); RETURN NULL;',
                    hash="07f86c78274659c3e418831a8696b36548fd00df",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_a9aca",
                    table="items_item",
                    when="AFTER",
                ),
            ),
        ),
    ]
