# Generated by Django 4.2 on 2023-05-25 03:48

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("items", "0013_cooking_level"),
        ("pghistory", "0005_events_middlewareevents"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunityCenter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("input_quantity", models.BigIntegerField()),
                ("output_quantity", models.BigIntegerField()),
                ("progress", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "input_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_center_inputs",
                        to="items.item",
                    ),
                ),
                (
                    "output_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_center_outputs",
                        to="items.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CommunityCenterEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("date", models.DateField()),
                ("input_quantity", models.BigIntegerField()),
                ("output_quantity", models.BigIntegerField()),
                ("progress", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "input_item",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "output_item",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="community_center.communitycenter",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="communitycenter",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "community_center_communitycenterevent" ("created_at", "date", "id", "input_item_id", "input_quantity", "output_item_id", "output_quantity", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "progress") VALUES (NEW."created_at", NEW."date", NEW."id", NEW."input_item_id", NEW."input_quantity", NEW."output_item_id", NEW."output_quantity", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."progress"); RETURN NULL;',
                    hash="1382144cf05e2a90331a7ab63d013f5c05284732",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_31dc5",
                    table="community_center_communitycenter",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="communitycenter",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."date" IS DISTINCT FROM (NEW."date") OR OLD."input_item_id" IS DISTINCT FROM (NEW."input_item_id") OR OLD."input_quantity" IS DISTINCT FROM (NEW."input_quantity") OR OLD."output_item_id" IS DISTINCT FROM (NEW."output_item_id") OR OLD."output_quantity" IS DISTINCT FROM (NEW."output_quantity") OR OLD."progress" IS DISTINCT FROM (NEW."progress") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "community_center_communitycenterevent" ("created_at", "date", "id", "input_item_id", "input_quantity", "output_item_id", "output_quantity", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "progress") VALUES (NEW."created_at", NEW."date", NEW."id", NEW."input_item_id", NEW."input_quantity", NEW."output_item_id", NEW."output_quantity", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."progress"); RETURN NULL;',
                    hash="b96d2421596ab6b958298007ccc8973b80347693",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_14ca2",
                    table="community_center_communitycenter",
                    when="AFTER",
                ),
            ),
        ),
    ]
