# Generated by Django 4.2 on 2023-05-15 03:21

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
    ]

    operations = [
        migrations.CreateModel(
            name="Update",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("content", models.TextField()),
                ("annouced_discord", models.BooleanField()),
                ("announced_reddit", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="UpdateEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("date", models.DateField()),
                ("content", models.TextField()),
                ("annouced_discord", models.BooleanField()),
                ("announced_reddit", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="updates.update",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="update",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "updates_updateevent" ("annouced_discord", "announced_reddit", "content", "created_at", "date", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."annouced_discord", NEW."announced_reddit", NEW."content", NEW."created_at", NEW."date", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="6e4b57ac0e0729e99ef0517259521545090f97a9",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_3aa1c",
                    table="updates_update",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="update",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."date" IS DISTINCT FROM (NEW."date") OR OLD."content" IS DISTINCT FROM (NEW."content") OR OLD."annouced_discord" IS DISTINCT FROM (NEW."annouced_discord") OR OLD."announced_reddit" IS DISTINCT FROM (NEW."announced_reddit") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "updates_updateevent" ("annouced_discord", "announced_reddit", "content", "created_at", "date", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."annouced_discord", NEW."announced_reddit", NEW."content", NEW."created_at", NEW."date", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="067d926285b617e9fd4ac92ea84a2576edee6a55",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_60933",
                    table="updates_update",
                    when="AFTER",
                ),
            ),
        ),
    ]
