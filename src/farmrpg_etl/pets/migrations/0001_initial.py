# Generated by Django 4.2 on 2023-05-01 01:32

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
        ("items", "0004_alter_item_description_alter_itemevent_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("image", models.CharField(max_length=255)),
                ("cost", models.BigIntegerField()),
                ("required_farming_level", models.IntegerField(default=0)),
                ("required_fishing_level", models.IntegerField(default=0)),
                ("required_crafting_level", models.IntegerField(default=0)),
                ("required_exploring_level", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="PetItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.IntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pet_items",
                        to="items.item",
                    ),
                ),
                (
                    "pet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pet_items",
                        to="pets.pet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PetItemEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("level", models.IntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "pet",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="pets.pet",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="pets.petitem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PetEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("name", models.CharField(max_length=255)),
                ("image", models.CharField(max_length=255)),
                ("cost", models.BigIntegerField()),
                ("required_farming_level", models.IntegerField(default=0)),
                ("required_fishing_level", models.IntegerField(default=0)),
                ("required_crafting_level", models.IntegerField(default=0)),
                ("required_exploring_level", models.IntegerField(default=0)),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="pets.pet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="pet",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "pets_petevent" ("cost", "id", "image", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "required_crafting_level", "required_exploring_level", "required_farming_level", "required_fishing_level") VALUES (NEW."cost", NEW."id", NEW."image", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."required_crafting_level", NEW."required_exploring_level", NEW."required_farming_level", NEW."required_fishing_level"); RETURN NULL;',
                    hash="d64a834433131ce165c670df29c4f14c4306874b",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_0ddae",
                    table="pets_pet",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="pet",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "pets_petevent" ("cost", "id", "image", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "required_crafting_level", "required_exploring_level", "required_farming_level", "required_fishing_level") VALUES (NEW."cost", NEW."id", NEW."image", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."required_crafting_level", NEW."required_exploring_level", NEW."required_farming_level", NEW."required_fishing_level"); RETURN NULL;',
                    hash="d66849fa11a4c232f2b4458ddcdf6965480ad675",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_fe0fe",
                    table="pets_pet",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="petitem",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "pets_petitemevent" ("id", "item_id", "level", "pet_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."item_id", NEW."level", NEW."pet_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="c60a6cb1f1590a7b8c5cee443e91c7c8c57c6302",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_27dd3",
                    table="pets_petitem",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="petitem",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "pets_petitemevent" ("id", "item_id", "level", "pet_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."item_id", NEW."level", NEW."pet_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="877197f4edd86a33c0f79baf13c3d586357196ad",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_70b5b",
                    table="pets_petitem",
                    when="AFTER",
                ),
            ),
        ),
    ]
