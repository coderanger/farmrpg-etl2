# Generated by Django 4.2 on 2023-05-15 17:56

from django.db import migrations, models
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("updates", "0001_initial"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="update",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="update",
            name="snapshot_update",
        ),
        migrations.AddField(
            model_name="update",
            name="clean_content",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="update",
            name="text_content",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="updateevent",
            name="clean_content",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="updateevent",
            name="text_content",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="update",
            name="annouced_discord",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="update",
            name="announced_reddit",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="updateevent",
            name="annouced_discord",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="updateevent",
            name="announced_reddit",
            field=models.BooleanField(default=False),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="update",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "updates_updateevent" ("annouced_discord", "announced_reddit", "clean_content", "content", "created_at", "date", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "text_content") VALUES (NEW."annouced_discord", NEW."announced_reddit", NEW."clean_content", NEW."content", NEW."created_at", NEW."date", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."text_content"); RETURN NULL;',
                    hash="7c1133547c565a35300cb159d0d840321ce01ed0",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_3aa1c",
                    table="updates_update",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="update",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."date" IS DISTINCT FROM (NEW."date") OR OLD."content" IS DISTINCT FROM (NEW."content") OR OLD."clean_content" IS DISTINCT FROM (NEW."clean_content") OR OLD."text_content" IS DISTINCT FROM (NEW."text_content") OR OLD."annouced_discord" IS DISTINCT FROM (NEW."annouced_discord") OR OLD."announced_reddit" IS DISTINCT FROM (NEW."announced_reddit") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "updates_updateevent" ("annouced_discord", "announced_reddit", "clean_content", "content", "created_at", "date", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "text_content") VALUES (NEW."annouced_discord", NEW."announced_reddit", NEW."clean_content", NEW."content", NEW."created_at", NEW."date", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."text_content"); RETURN NULL;',
                    hash="35ea943ddf5e7c536761745dc5e23b0716e8cdc3",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_60933",
                    table="updates_update",
                    when="AFTER",
                ),
            ),
        ),
    ]
