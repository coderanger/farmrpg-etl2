# Generated by Django 4.2 on 2023-05-08 04:32

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
        ("items", "0006_remove_item_snapshot_insert_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="QuizAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_order", models.IntegerField()),
                ("question", models.TextField()),
                ("answer1", models.TextField(blank=True)),
                ("answer2", models.TextField(blank=True)),
                ("answer3", models.TextField(blank=True)),
                ("answer4", models.TextField(blank=True)),
                ("correct", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="quizzes.quiz",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuizReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                ("quantity", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_rewards",
                        to="items.item",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to="quizzes.quiz",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuizRewardEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("score", models.IntegerField()),
                ("quantity", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "item",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="items.item",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="quizzes.quizreward",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="quizzes.quiz",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QuizEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="quizzes.quiz",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QuizAnswerEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("display_order", models.IntegerField()),
                ("question", models.TextField()),
                ("answer1", models.TextField(blank=True)),
                ("answer2", models.TextField(blank=True)),
                ("answer3", models.TextField(blank=True)),
                ("answer4", models.TextField(blank=True)),
                ("correct", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="event",
                        to="quizzes.quizanswer",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="quizzes.quiz",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quiz",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "quizzes_quizevent" ("created_at", "description", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."created_at", NEW."description", NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="6756874711166b5f145c9b3d06534e8c4b2f7b4c",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_994e7",
                    table="quizzes_quiz",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quiz",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name") OR OLD."description" IS DISTINCT FROM (NEW."description") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "quizzes_quizevent" ("created_at", "description", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."created_at", NEW."description", NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="ec3e3aaace4393be33e79d664c8983d75692e069",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_fad3a",
                    table="quizzes_quiz",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddConstraint(
            model_name="quizreward",
            constraint=models.UniqueConstraint(
                fields=("quiz", "score"), name="quiz_score"
            ),
        ),
        migrations.AddConstraint(
            model_name="quizanswer",
            constraint=models.UniqueConstraint(
                fields=("quiz", "display_order"), name="quiz_display_order"
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quizreward",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "quizzes_quizrewardevent" ("created_at", "id", "item_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "quantity", "quiz_id", "score") VALUES (NEW."created_at", NEW."id", NEW."item_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."quantity", NEW."quiz_id", NEW."score"); RETURN NULL;',
                    hash="b32e822918340828d95a711b96e1feb94f590a14",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_55ef9",
                    table="quizzes_quizreward",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quizreward",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."quiz_id" IS DISTINCT FROM (NEW."quiz_id") OR OLD."score" IS DISTINCT FROM (NEW."score") OR OLD."item_id" IS DISTINCT FROM (NEW."item_id") OR OLD."quantity" IS DISTINCT FROM (NEW."quantity") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "quizzes_quizrewardevent" ("created_at", "id", "item_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "quantity", "quiz_id", "score") VALUES (NEW."created_at", NEW."id", NEW."item_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."quantity", NEW."quiz_id", NEW."score"); RETURN NULL;',
                    hash="42c1ab78e7a36a1f9b07fba40020aab1e3e98cb0",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_454fc",
                    table="quizzes_quizreward",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quizanswer",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "quizzes_quizanswerevent" ("answer1", "answer2", "answer3", "answer4", "correct", "created_at", "display_order", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "question", "quiz_id") VALUES (NEW."answer1", NEW."answer2", NEW."answer3", NEW."answer4", NEW."correct", NEW."created_at", NEW."display_order", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."question", NEW."quiz_id"); RETURN NULL;',
                    hash="594cfb248d756c4ba50316f5ecae24b10909866b",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_c23f2",
                    table="quizzes_quizanswer",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="quizanswer",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."quiz_id" IS DISTINCT FROM (NEW."quiz_id") OR OLD."display_order" IS DISTINCT FROM (NEW."display_order") OR OLD."question" IS DISTINCT FROM (NEW."question") OR OLD."answer1" IS DISTINCT FROM (NEW."answer1") OR OLD."answer2" IS DISTINCT FROM (NEW."answer2") OR OLD."answer3" IS DISTINCT FROM (NEW."answer3") OR OLD."answer4" IS DISTINCT FROM (NEW."answer4") OR OLD."correct" IS DISTINCT FROM (NEW."correct") OR OLD."created_at" IS DISTINCT FROM (NEW."created_at"))',
                    func='INSERT INTO "quizzes_quizanswerevent" ("answer1", "answer2", "answer3", "answer4", "correct", "created_at", "display_order", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "question", "quiz_id") VALUES (NEW."answer1", NEW."answer2", NEW."answer3", NEW."answer4", NEW."correct", NEW."created_at", NEW."display_order", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."question", NEW."quiz_id"); RETURN NULL;',
                    hash="519f6f545b4a407aef33c8a64b904458cad24658",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_8e09d",
                    table="quizzes_quizanswer",
                    when="AFTER",
                ),
            ),
        ),
    ]
