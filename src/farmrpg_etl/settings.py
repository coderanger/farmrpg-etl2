"""
Django settings for farmrpg-etl project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from typing import TYPE_CHECKING, Optional
from urllib.parse import urlparse

import dj_database_url
import sentry_sdk
from django.core.exceptions import DisallowedHost
from sentry_sdk.integrations.asyncio import AsyncioIntegration
from sentry_sdk.integrations.django import DjangoIntegration

if TYPE_CHECKING:
    from sentry_sdk._types import Event, Hint

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

if "SENTRY_DSN" in os.environ:

    def filter_transactions(event: "Event", hint: "Hint") -> Optional["Event"]:
        url_string: str = event["request"]["url"]
        parsed_url = urlparse(url_string)

        if parsed_url.path == "/graphql":
            return None

        return event

    sentry_sdk.init(
        dsn=os.environ["SENTRY_DSN"],
        integrations=[
            DjangoIntegration(),
            AsyncioIntegration(),
        ],
        # Set traces_sample_rate to 1.0 to capture 100%
        # of transactions for performance monitoring.
        # We recommend adjusting this value in production.
        traces_sample_rate=0,
        # If you wish to associate users to errors (assuming you are using
        # django.contrib.auth) you may enable sending PII data.
        send_default_pii=True,
        ignore_errors=[DisallowedHost],
        before_send_transaction=filter_transactions,
    )

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DJANGO_DEBUG") == "true"

ALLOWED_HOSTS = [
    "api.buddy.farm",
]

if DEBUG:
    ALLOWED_HOSTS.append("127.0.0.1")
    ALLOWED_HOSTS.append("localhost")


# Application definition

INSTALLED_APPS = [
    "pghistory.admin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "strawberry_django",
    "strawberry_django_plus",
    "rest_framework",
    "pghistory",
    "pgtrigger",
    "farmrpg_etl.items",
    "farmrpg_etl.quests",
    "farmrpg_etl.users",
    "farmrpg_etl.chat",
    "farmrpg_etl.pets",
    "farmrpg_etl.locations",
    "farmrpg_etl.quizzes",
    "farmrpg_etl.npcs",
    "farmrpg_etl.updates",
    "farmrpg_etl.passwords",
    "farmrpg_etl.exchange_center",
    "farmrpg_etl.borgen",
    "farmrpg_etl.community_center",
    "farmrpg_etl.pbgs",
    "farmrpg_etl.tower",
    "farmrpg_etl.cron",
    # "farmrpg_etl.trades",
    "farmrpg_etl.ssh_tunnel",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if os.environ.get("SYNC_DEVELOP"):
    INSTALLED_APPS.append("debug_toolbar")
    MIDDLEWARE.insert(
        0, "strawberry_django_plus.middlewares.debug_toolbar.DebugToolbarMiddleware"
    )

ROOT_URLCONF = "farmrpg_etl.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "farmrpg_etl.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.config(
        conn_max_age=600,
        conn_health_checks=True,
    ),
    "game_prod": dj_database_url.config(
        env="DATABASE_URL_GAME_PROD",
        conn_max_age=600,
        conn_health_checks=True,
    ),
    "game_alpha": dj_database_url.config(
        env="DATABASE_URL_GAME_ALPHA",
        conn_max_age=600,
        conn_health_checks=True,
    ),
}

DATABASE_ROUTERS = ["farmrpg_etl.database_routers.GameRouter"]

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR / "staticfiles"

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

INTERNAL_IPS = [
    "127.0.0.1",
]

ENABLE_TASKS = [s.strip() for s in os.environ.get("ENABLE_TASKS", "*").split(",")]

WEB_API_KEY = os.environ.get("WEB_API_KEY")
WEB_API_REFERER = os.environ.get("WEB_API_REFERER")

MATTERBRIDGE_API = os.environ.get("MATTERBRIDGE_API")
